<?xml version="1.0" encoding="UTF-8"?>
<section name="Workbench">
	<section name="org.eclipse.jdt.debug.ui.MAIN_METHOD_SELECTION_DIALOG">
		<item key="ShowStatusLine" value="true"/>
		<item key="History" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#x0D;&#x0A;&lt;History&gt;&#x0D;&#x0A;&lt;historyRootNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=GreatLearningJava/src&amp;lt;basicJavaProgram{Function.java[Function3&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=GreatLearningJava/src&amp;lt;basicJavaProgram{Function.java[Function4&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=GreatLearningJava/src&amp;lt;basicJavaProgram{Function.java[GFG&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;expressions{Main.java[MainDouble&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;whileLoop{Main.java[Main1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=help/src&amp;lt;swapVariables{main.java[Double&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;forLoop{Practice.java[Practice1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;expressions{Practice.java[PracticeDouble&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;operator{Practice.java[Practice&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;operator{Practice.java[Practice1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;operator{Practice.java[Practice2&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;arithmeticOperators{ArithmeticOperators.java[ArithmeticOperators&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;arithmeticOperators{ArithmeticOperators.java[CompoundAssignment&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;bitwiseOperator{BitwiseOperator.java[BitwiseShiftOperator&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;arithmeticOperators{ArithmeticOperators.java[IncrementOrDecrementOperator&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;ifElse{IfElse.java[IfDemo&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{WhileLoop.java[WhileLoopUserExecution&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{NestedLoops.java[NestedLoops1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{NestedLoops.java[NestedLoops2&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{LoopsControlStatement.java[LoopsControlStatement1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{LoopsControlStatement.java[NestedLoopsProblem1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{LoopsControlStatement.java[LoopContinue&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{LoopsControlStatement.java[NestedLoopsContinue&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loopsandpackages{Array.java[ArrayUser&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;methods{Main.java[Main1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;methods{Main.java[Main&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Hello/src&amp;lt;{ForClass.java[forLoopInt&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Hello/src&amp;lt;{ForClass.java[forLoopDecrement&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Hello/src&amp;lt;{ifElseNestedIfTernaryOperator.java[nestedIf&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[ScannerPractice&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[Practice&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[ExpressionDouble&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[math&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[hypertenuse&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[Expression&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[random&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[ifStatement&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[ifStatementsystem&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[switchcondition&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[logicalOperators&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[logicalOR&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[logicalNot&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[whileLoop&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[whileLoopUserInput&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[nestedLoop_Pattern1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[nestedLoop_TrianglePattern&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=BroCode/src&amp;lt;{Practice.java[nestedLoop_Pattern&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Patterns/src&amp;lt;patterns{Pattern1.java[Pattern1User&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Patterns/src&amp;lt;patterns{Pattern2.java[Pattern2User&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Patterns/src&amp;lt;patterns{Pattern1.java[Pattern1&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=Patterns/src&amp;lt;patterns{Pattern2.java[Pattern2&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[ForWithLabels&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[WhileLoopCheck&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[DoWhile&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[Simplepgm&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[OneDimensionalArray&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=SimpliLearn/src&amp;lt;practice{Practice.java[Foreacheg&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=lft/src&amp;lt;loops{LoopsControlStatement.java[NestedLoopsProblem&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=HackerRankProblem/src&amp;lt;problems{JavaLoops.java[JavaLoops&lt;/infoNode&gt;&#x0D;&#x0A;&lt;infoNode&gt;=HackerRankProblem/src&amp;lt;problems{JavaLoops.java[JavaLoop2&lt;/infoNode&gt;&#x0D;&#x0A;&lt;/historyRootNode&gt;&#x0D;&#x0A;&lt;/History&gt;"/>
		<section name="DialogBoundsSettings">
			<item key="DIALOG_HEIGHT" value="500"/>
			<item key="DIALOG_WIDTH" value="600"/>
			<item key="DIALOG_X_ORIGIN" value="368"/>
			<item key="DIALOG_Y_ORIGIN" value="398"/>
			<item key="DIALOG_FONT_NAME" value="1|Segoe UI|9.0|0|WINDOWS|1|-15|0|0|0|400|0|0|0|1|0|0|0|0|Segoe UI"/>
		</section>
	</section>
</section>
